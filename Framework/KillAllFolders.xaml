<Activity mc:Ignorable="sap sap2010" x:Class="KillAllFolders" this:KillAllFolders.in_Folder_List="[String.Empty]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Folder_List" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>627.6,1205.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>KillAllFolders_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Framework Sequence to drop all folders if they exist&#xA;&#xA;Pre Condition: Invoke this sequence inside the Init State machine before or after KillAllProcesses.xaml after checking if you've defined an entry in the configuration settings listing all the folders that you need to be dropped during the initialization &#xD;&#xA;&#xD;&#xA;Post Condtion: All folders listed in the in_Folder_List argument will be dropped if they exist.&#xA;&#xA;Inputs:&#xA;in_Folder_List : A CSV list of full folder paths that need to be dropped to ensure a clean start/restart of the RPA Process.&#xA;&#xA;Example: &quot;C:\UiPath_Data\reports,C:\UiPath_Data\data&quot;&#xD;&#xA;Folder paths must be absolute. Multiple folders must be separated by a comma&#xD;&#xA;&#xD;&#xA;LIMITATIONS: &#xD;&#xA;Supports only single-level folders. Folders within folders are not dropped. Therefore, pass in only folder paths that only contain files and not child folders.&#xA;&#xA;" DisplayName="Kill All Folders if any" sap:VirtualizedContainerService.HintSize="587.6,1125.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="listProcess" />
      <Variable x:TypeArguments="x:Boolean" Name="FolderStatus" />
      <Variable x:TypeArguments="s:String[]" Name="listFolders" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Get Folders List" sap:VirtualizedContainerService.HintSize="549.6,59.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[listFolders]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[in_Folder_List.Split(",".ToCharArray())]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each: Folder Path" sap:VirtualizedContainerService.HintSize="549.6,594" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[listFolders]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="f" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="518,459.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists DisplayName="Path Exists" Exists="[FolderStatus]" sap:VirtualizedContainerService.HintSize="480,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[f.ToString]" PathType="Folder" />
            <If Condition="[FolderStatus = True]" sap:VirtualizedContainerService.HintSize="480,237.2" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="330,87.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Common\Move_or_Delete_Directory.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_From_Directory">[f.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_To_Directory">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Delete_Folder">True</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Clear_Folder">True</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Move_Folder">False</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Status">[FolderStatus]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>