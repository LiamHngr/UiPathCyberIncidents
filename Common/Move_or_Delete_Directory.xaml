<Activity mc:Ignorable="sap sap2010" x:Class="Move_or_Delete_Directory" this:Move_or_Delete_Directory.in_Delete_Folder="False" this:Move_or_Delete_Directory.in_Clear_Folder="False" this:Move_or_Delete_Directory.in_Move_Folder="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_From_Directory" Type="InArgument(x:String)" />
    <x:Property Name="in_To_Directory" Type="InArgument(x:String)" />
    <x:Property Name="in_Delete_Folder" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_Status" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_Clear_Folder" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_Move_Folder" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Move_or_Delete_Directory.in_From_Directory>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Move_or_Delete_Directory.in_From_Directory>
  <this:Move_or_Delete_Directory.in_To_Directory>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Move_or_Delete_Directory.in_To_Directory>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>630.8,1926.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Archive_Directory_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Sequence to either Archive(Move) or Delete a Directory.&#xA;&#xA;Inputs:&#xA;in_From_Directory - The source directory to be archived&#xA;in_To_Directory - The path where the source directory needs to be archived to.&#xD;&#xA;This parameter will be ignored if: &#xA;&#xA;If in_Delete_Folder is set to True&#xA;If in_Clear_Folder is set to True&#xD;&#xA;&#xA;If in_Move_Folder is set to True, sequence will fail if both, in_From_Directory &amp; in_To_Directory parameters are missing!&#xA;&#xA;&#xA;OPTIONAL: &#xA;in_Delete_Folder&#xA;Will drop folder specified by the in_From_Directory parameter&#xA;Defaults to False. If set to True, the destination directory parameter in_To_Directory will be ignored.&#xA;&#xD;&#xA;in_Clear_Folder&#xA;Will clear file contents of folder specified by the in_From_Directory parameter&#xA;Defaults to False. If set to True, the destination directory parameter in_To_Directory will be ignored.&#xA;&#xD;&#xA;in_Move_Folder&#xD;&#xA;Defaults to False. If set to True both, in_From_Directory &amp; in_To_Directory parameters are required!&#xA;&#xA;Outputs:&#xA;out_Status - Boolean - True if no Errors, False if Error&#xA;&#xA;DIRECTORY SUPPORT LEVEL:&#xA;Supports only single level folders for simplicity and atomicity. If nested folders have to be moved, cleared or deleted, this sequence will have to be called within repeat constructs." DisplayName="Archive_or_Delete_Directory" sap:VirtualizedContainerService.HintSize="590.8,1846.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try: Directory Maintenance" sap:VirtualizedContainerService.HintSize="552.8,1218" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Seq: Move or Delete Folder" sap:VirtualizedContainerService.HintSize="519.2,985.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_Clear_Folder = True]" DisplayName="Clear folder before Delete" sap:VirtualizedContainerService.HintSize="481.2,590" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence DisplayName="Seq: Del files in Folder" sap:VirtualizedContainerService.HintSize="340.8,440" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="fileList" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="302.8,59.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[fileList]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_From_Directory)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="302.8,248.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileList]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="f" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="254,114" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File in Folder" sap:VirtualizedContainerService.HintSize="216,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Path.Combine(in_From_Directory,f.ToString)]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </If.Then>
          </If>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="If moveFolder = True Then&#xA;&#x9;Directory.Move(fromFolder, toFolder)&#xA;End If&#xA;If deleteFolder = True Then &#xA;&#x9;Directory.Delete(fromFolder)&#xA;End If&#xA;&#x9;&#xA;&#x9;" DisplayName="Run Code: Move Directory" sap:VirtualizedContainerService.HintSize="481.2,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="fromFolder">[in_From_Directory]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="toFolder">[in_To_Directory]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="deleteFolder">[in_Delete_Folder]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="moveFolder">[in_Move_Folder]</InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <Assign sap:VirtualizedContainerService.HintSize="481.2,59.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="522.8,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Seq:Exception" sap:VirtualizedContainerService.HintSize="368,285.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="330,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;(Error)! Failed to perform specified file or folder operation! Error : &quot; + exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="330,59.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[out_Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>