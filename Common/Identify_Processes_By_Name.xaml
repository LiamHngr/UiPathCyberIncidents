<Activity mc:Ignorable="sap sap2010" x:Class="KillAllTargetProcessesByName" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="499.6,1836.8" sap2010:WorkflowViewState.IdRef="KillAllTargetProcessesByName_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Test Sequence to Identify the Process Name that needs to be killed by the RPA Process&#xA;&#xA;Usage:&#xA;1. Start an instance of your process that needs to be identified for  termination - Example: A few windows of Google Chrome or Microsoft Edge&#xA;&#xD;&#xA;2. Assign the name of your machine to the 'Robot_Machine_Nm' variable&#xD;&#xA;&#xD;&#xA;NOTE: &#xD;&#xA;Do not use Full Computer Name if it follows the MachineName.Domain.com convention. Just use the Computer Name&#xD;&#xA;&#xA;3. Enable Seq 1 and disable Seq  2 if not already done and run this Sequence.&#xA;Seq 1 will output a list of Process Window Titles (where available) and the Process Name &#xA;&#xA;4. Identify the process to be terminated - Example: &quot;chrome&quot; &#xA;&#xA;5. Disable Seq 1 and Enable Seq 2.&#xA;&#xA;6. In the Kill Process Activity of Seq 2, configure the Process Name attribute with the name of the process from Seq 1&#xA;&#xA;7. Run this workflow with Seq 2 enabled  - in this case the expected result is for all Chrome windows to be terminated." DisplayName="Test Process to Kill" sap:VirtualizedContainerService.HintSize="479.6,1736.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:Process[]" Name="allProcesses" />
      <Variable x:TypeArguments="sd:Process" Name="thisProcess" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="x" />
      <Variable x:TypeArguments="x:String" Name="Robot_Machine_Nm" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Set Your_Machine_Name" sap:VirtualizedContainerService.HintSize="437.6,59.6" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Robot_Machine_Nm]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">Your_Machine_Name</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch: Process Names" sap:VirtualizedContainerService.HintSize="437.6,1014.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Seq 1: Get Process List" sap:VirtualizedContainerService.HintSize="382,782" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Get a List of All Current Processes" sap:VirtualizedContainerService.HintSize="340,59.6" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:Process[]">[allProcesses]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:Process[]">[System.Diagnostics.Process.GetProcesses(Robot_Machine_Nm)]</InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="340,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Process Count is: &quot; + allProcesses.Count.ToString]" />
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340,488" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[allProcesses]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="proc" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304.4,353.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Get A Process from Array" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:Process">[thisProcess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:Process">[allProcesses(x)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Process Title/Name" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Window Title of Process is: &quot; + thisProcess.MainWindowTitle.toString +Environment.NewLine+ &quot;Process Name is &gt;&gt;&gt; : &quot; + thisProcess.ProcessName]" />
                  <Assign DisplayName="Next Process in Array" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[x]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[x+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.6,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;(Error)! Failed to get a list of currently active processes on this machine. Make sure that the 'Robot_Machine_Nm' parameter has been set. Error returned is :&quot; + Environment.NewLine + exception.Message]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:CommentOut DisplayName="Enable to Test Kill Processes" sap:VirtualizedContainerService.HintSize="437.6,52.4" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="284,206" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Seq 2: Enable this to Kill a Process By Name" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="iexplore" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>